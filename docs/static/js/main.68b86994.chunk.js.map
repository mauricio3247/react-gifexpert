{"version":3,"sources":["components/AddCategory.tsx","components/GifGridItem.tsx","helpers/getGifs.tsx","components/GifGrid.tsx","hooks/useFetchGifs.tsx","GifExpertApp.tsx","index.tsx"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","onChange","target","value","GifGridItemComponent","title","url","id","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGridComponent","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExperApp","item","ReactDOM","render","document","getElementById"],"mappings":"2MAMaA,EAAc,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,cAAuC,EAE5BC,mBAAS,IAFmB,mBAEzDC,EAFyD,KAE7CC,EAF6C,KAehE,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAgBP,GAAhB,mBAA+BO,OAC7CN,EAAc,OAMd,2BACAO,SAfY,SAACL,GACjBF,EAAcE,EAAEM,OAAOC,QAenBA,MAAOV,MCvBNW,EAAuB,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,IAAiB,EAAZC,GAC9C,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKH,EAAKI,IAAKL,IACpB,2BAAIA,K,uBCNHM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbP,EADa,iDACmCQ,UAAUF,GAD7C,+DAEAG,MAAMT,GAFN,cAEbU,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GAAY,IAAD,EAC9B,MAAO,CACHd,GAAIc,EAAId,GACRF,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIC,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAaZa,GAbY,4CAAH,sDCUPK,EAAmB,SAAC,GAAkC,IAAjCZ,EAAgC,EAAhCA,SAAgC,ECFtC,SAACA,GAAqB,IAAD,EACnBpB,mBAAyB,CAC/C0B,KAAM,GACNO,SAAS,IAHgC,mBACtCC,EADsC,KAC/BC,EAD+B,KAe7C,OATAC,qBAAU,WACNjB,EAAQC,GACPiB,MAAK,SAAAP,GAAM,OAAIK,EAAU,CACtBT,KAAMI,EACNG,SAAS,SAEd,CAACb,IAGGc,EDXwBI,CAAalB,GAAhCU,EAFkD,EAEvDJ,KAAaO,EAF0C,EAE1CA,QAEpB,OACI,oCACA,wBAAIjB,UAAU,qCAAqCI,GACnD,yBAAKJ,UAAU,aAETiB,GAAW,uBAAGjB,UAAU,oCAAb,gBAGTc,EAAOF,KAAM,SAAAC,GAAG,OACZ,kBAAC,EAAD,iBACIA,EADJ,CAEAU,IAAKV,EAAId,YErBhByB,EAAc,WAAM,IAAD,EAEQxC,mBAAmB,CAAC,cAF5B,mBAErBQ,EAFqB,KAETT,EAFS,KAI5B,OACI,oCACI,4CACA,6BAEA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,4BAEIS,EAAWoB,KAAK,SAACa,GAAD,OACZ,kBAAC,EAAD,CAAkBrB,SAAUqB,EAAMF,IAAKE,U,MCX3DC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.68b86994.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\ntype CategoryProperties = {\r\n    setCategories:  React.Dispatch<React.SetStateAction<string[]>>\r\n}\r\n\r\nexport const AddCategory = ({setCategories}: CategoryProperties) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInput = (e:any) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories((categories)=> [inputValue, ...categories])\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n            <input \r\n            onChange={handleInput} \r\n            value={inputValue} />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItemComponent = ({title, url, id}:any) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            <img src={url} alt={title} ></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","export const getGifs = async (category:string) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=PYxNlECfPLLzQBrWBozSV33nvEBZi3gm`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map((img:any)=> {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GifGridItemComponent } from './GifGridItem'\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\ntype GifGridProperties = {\r\n    category: string\r\n}\r\n\r\nexport const GifGridComponent = ({category}: GifGridProperties)=> {\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        <div className='card-grid'>\r\n            \r\n            { loading && <p className=\"animate__animated animate__flash\">'Loading...'</p> }\r\n\r\n            {\r\n                images.map ( img => (\r\n                    <GifGridItemComponent \r\n                    {...img}\r\n                    key={img.id} />\r\n                ))\r\n            }\r\n                \r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGridComponent.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\ntype stateFetchGift = {\r\n    data: Array<any>,\r\n    loading: boolean\r\n}\r\n\r\nexport const useFetchGifs = (category:string) => {\r\n    const [state, setstate] = useState<stateFetchGift>({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=> {\r\n        getGifs(category)\r\n        .then(images => setstate ({\r\n            data: images,\r\n            loading: false\r\n        }))\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGridComponent } from './components/GifGrid';\r\n\r\nexport const GifExperApp = ()=> {\r\n    \r\n    const [categories, setCategories] = useState<string[]>(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <hr/>\r\n\r\n            <AddCategory setCategories = {setCategories} />\r\n            <ol>\r\n                { \r\n                categories.map ((item) => (\r\n                    <GifGridComponent category={item} key={item}></GifGridComponent>\r\n                ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExperApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExperApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}